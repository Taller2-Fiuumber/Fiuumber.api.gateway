name: Production
on:
  push:
    branches:
      - 'main'
      - 'feature/pipeline'
jobs:
  linter:
    name: Format and lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 18.x
      - name: Install dependencies
        run:  npm install
      - name: Format
        run: npm run prettier-format
      - name: Lint
        run: npm run lint

  build-and-push-image:
    needs: [linter]
    name: Build and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY_URL: registry.gitlab.com/fiuba-memo2/tp2-20221
      CI_IMAGE_REGISTRY: ghcr.io
      CI_OWNER: Taller2-Fiuumber
      CI_IMAGE_NAME: ${{ github.repository }}
      GITHUB_TOKEN: ${{ github.token }}
      GITHUB_USERNAME: ${{ github.actor }}
      HEROKU_APP: fiuumber-gateway-1
      FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
      FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
      FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
      FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
      FIREBASE_API_ID: ${{ secrets.FIREBASE_API_ID }}
      API_USERS_URL: ${{ secrets.API_USERS_URL }}
      API_USERS_BASE_PATH: ${{ secrets.API_USERS_BASE_PATH }}
      API_TRIPS_URL: ${{ secrets.API_TRIPS_URL }}
      API_TRIPS_BASE_PATH: ${{ secrets.API_TRIPS_BASE_PATH }}
      TOKEN_SECRET: ${{ secrets.TOKEN_SECRET }}
    steps:
      - uses: actions/checkout@master

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.CI_IMAGE_REGISTRY }}
          username: ${{ env.GITHUB_USERNAME }}
          password: ${{ env.GITHUB_TOKEN }}

      - name: Get image tag
        env:
          IMAGE_NAME: ${{ env.CI_IMAGE_REGISTRY }}/${{ env.CI_IMAGE_NAME }}
        run: |
          VERSION=$(cat Version.txt)
          IMAGE_NAME=$(echo "$IMAGE_NAME" | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_TAG=$(echo $IMAGE_NAME:$VERSION)" >> $GITHUB_ENV
      - name: Build image
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
          FIREBASE_API_ID: ${{ secrets.FIREBASE_API_ID }}
          API_USERS_URL: ${{ secrets.API_USERS_URL }}
          API_USERS_BASE_PATH: ${{ secrets.API_USERS_BASE_PATH }}
          API_TRIPS_URL: ${{ secrets.API_TRIPS_URL }}
          API_TRIPS_BASE_PATH: ${{ secrets.API_TRIPS_BASE_PATH }}
          TOKEN_SECRET: ${{ secrets.TOKEN_SECRET }}
        run: docker build -t ${{ env.IMAGE_TAG }} .
          --build-arg firebase_api_key=${{ env.FIREBASE_API_KEY }}
          --build-arg firebase_auth_domain=${{ env.FIREBASE_AUTH_DOMAIN }}
          --build-arg firebase_project_id=${{ env.FIREBASE_PROJECT_ID }}
          --build-arg firebase_storage_bucket=${{ env.FIREBASE_STORAGE_BUCKET }}
          --build-arg firebase_messaging_sender_id=${{ env.FIREBASE_MESSAGING_SENDER_ID }}
          --build-arg firebase_api_id=${{ env.FIREBASE_API_ID }}
          --build-arg firebase_measurement_id=${{ env.FIREBASE_MEASUREMENT_ID }}
          --build-arg api_users_url=${{ env.API_USERS_URL }}
          --build-arg api_users_base_path=${{ env.API_USERS_BASE_PATH }}
          --build-arg api_trips_url=${{ env.API_TRIPS_URL }}
          --build-arg api_trips_base_path=${{ env.API_TRIPS_BASE_PATH }}
          --build-arg token_secret=${{ env.TOKEN_SECRET }}
      - name: Push image to Github Container Registry
        run: docker push ${{ env.IMAGE_TAG }}

      - name: Log in to Heroku Container Registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login

      - name: Tag container of Heroku Container Registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: docker tag ${{ env.IMAGE_TAG }} registry.heroku.com/${{ env.HEROKU_APP}}/web
      - name: Push container to Heroku Container Registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
          FIREBASE_API_ID: ${{ secrets.FIREBASE_API_ID }}
          API_USERS_URL: ${{ secrets.API_USERS_URL }}
          API_USERS_BASE_PATH: ${{ secrets.API_USERS_BASE_PATH }}
          API_TRIPS_URL: ${{ secrets.API_TRIPS_URL }}
          API_TRIPS_BASE_PATH: ${{ secrets.API_TRIPS_BASE_PATH }}
          TOKEN_SECRET: ${{ secrets.TOKEN_SECRET }}
        run: heroku container:push web
          --arg firebase_api_key=${{ env.FIREBASE_API_KEY }},firebase_auth_domain=${{ env.FIREBASE_AUTH_DOMAIN }},firebase_project_id=${{ env.FIREBASE_PROJECT_ID }},firebase_storage_bucket=${{ env.FIREBASE_STORAGE_BUCKET }},firebase_messaging_sender_id=${{ env.FIREBASE_MESSAGING_SENDER_ID }},firebase_api_id=${{ env.FIREBASE_API_ID }},firebase_measurement_id=${{ env.FIREBASE_MEASUREMENT_ID }},api_users_url=${{ env.API_USERS_URL }},api_users_base_path=${{ env.API_USERS_BASE_PATH }},api_trips_base_path=${{ env.API_TRIPS_BASE_PATH }},api_trips_path=${{ env.API_TRIPS_PATH }},token_secret=${{ env.TOKEN_SECRET }}
          --app ${{ env.HEROKU_APP}}
      - name: Release container to Heroku Container Registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release web --app ${{ env.HEROKU_APP}}
